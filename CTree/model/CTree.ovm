#include "ov.ovm"
#include "fb.ovm"

#include "ksbase.ovm"
#include "ksxdr.ovm"
#include "ksapi.ovm"
#include "kshttp.ovm"

LIBRARY CTree
	VERSION   = "V0.1 (15-Mon-2018)";
	AUTHOR    = "Zolboo Erdenebayar";
	COPYRIGHT = "Copyright (C) 2013 Lehrstuhl fuer Prozessleittechnik, RWTH Aachen";
	COMMENT   = "Upload and Download tree in json format";
	


	/**
		Documentation of Upload.
		@note Javadoc syntax is allowed here.
		@attention Changes in this file will only generate new code in ./source/sourcetemplates/. Code in ./source/ is not overwritten. 
	*/
	CLASS Upload : CLASS fb/functionblock
		IS_INSTANTIABLE;
		VARIABLES
			json: STRING FLAGS="i" COMMENT="Tree to upload as json format";
			path: STRING FLAGS="i" COMMENT="where to upload" INITIALVALUE="/TechUnits";
			
			result		:	INT FLAGS="o"
				COMMENT			= "Result: 0: Success; 1: Error; 4: Bad Param"
				INITIALVALUE	=	0;
			ErrorMsg:	STRING FLAGS="o" COMMENT = "Error log" INITIALVALUE="";
			
			cache: C_TYPE <CTreeUploadCache> COMMENT="Cache of Object";
		END_VARIABLES;
		OPERATIONS
			typemethod: C_FUNCTION <FB_FNC_TYPEMETHOD>;
		END_OPERATIONS;
	END_CLASS;
	
	/**
		Documentation of Copy.
		@note Javadoc syntax is allowed here.
		@attention Changes in this file will only generate new code in ./source/sourcetemplates/. Code in ./source/ is not overwritten. 
	*/
	CLASS Download : CLASS fb/functionblock
		IS_INSTANTIABLE;
		VARIABLES
			getVar: BOOL FLAGS="i" COMMENT="if variables should be copied" INITIALVALUE=TRUE;
			path: STRING FLAGS="i" COMMENT="path of object to download as json" INITIALVALUE="/TechUnits";
			
			tree: STRING FLAGS="o" COMMENT="tree as json";
			libs: STRING FLAGS="o" COMMENT="libs used in tree";
			
			result		:	INT FLAGS="o"
				COMMENT			= "Result: 0: Success; 1: Error; 4: Bad Param;"
				INITIALVALUE	=	0;
			ErrorMsg:	STRING FLAGS="o" COMMENT = "Error log" INITIALVALUE="";
			
			cache:	C_TYPE <CTreeDownloadCache> COMMENT="Cache";
		END_VARIABLES;
		OPERATIONS
			typemethod: C_FUNCTION <FB_FNC_TYPEMETHOD>;
		END_OPERATIONS;
	END_CLASS;
	
	CLASS	Transport					:	CLASS	CTree/Download
		IS_INSTANTIABLE;
		COMMENT	=	"Transport of tree from one server to another with Donwload and Upload";
		VARIABLES
			/* Input *************************************************/
			targetKS:	STRING FLAGS="i" COMMENT="IP:PORT/serverName/path of target object." INITIALVALUE="";
			targetPath:	STRING FLAGS="i" COMMENT="variable path of upload object." INITIALVALUE="";
			
			holdConnection	:	BOOL FLAGS="i"
				COMMENT			=	"Tell client not to close the connection after each request"
				INITIALVALUE	=	FALSE;
			Reset		:	BOOL	HAS_SET_ACCESSOR
				FLAGS="i"
				COMMENT	=	"Rising edge triggers reset of Client object and sets status and result to 0"
				INITIALVALUE	= FALSE;
			autoUpload: BOOL FLAGS="i" COMMENT="if the Upload object in target server automatically created, triggered and deleted";
			
			status		:	INT FLAGS="o" 
				COMMENT			= "Status: 0: initial; 1: request sent, waiting for answer; 2: completed;"
				INITIALVALUE	=	0;
			//serverName	:	STRING;
			//serverHost	:	STRING;
			//Submit		:	BOOL	HAS_SET_ACCESSOR
			//	COMMENT	=	"Rising edge triggers submit function"
			//	INITIALVALUE	= FALSE;
		END_VARIABLES;
		PARTS
		END_PARTS;
		OPERATIONS
			startup				:	C_FUNCTION <OV_FNC_STARTUP>;
			shutdown			:	C_FUNCTION <OV_FNC_SHUTDOWN>;
			submit				:	C_FUNCTION <CTREE_FNC_SUBMIT>;
			//getaccess			:	C_FUNCTION <OV_FNC_GETACCESS>;		/*	just to make all variables visible on KS	*/
			prepareSubmit		:	C_FUNCTION <CTREE_FNC_PREPSUBMIT>;
			genSetForSubmit		:	C_FUNCTION <CTREE_FNC_GENSETFSUBMIT>;
			typemethod			:	C_FUNCTION <FB_FNC_TYPEMETHOD>;
		END_OPERATIONS;
	END_CLASS;
	

	CLASS helper : CLASS ov/object
		VARIABLES
		END_VARIABLES;
		OPERATIONS
			valueToStr 	: C_FUNCTION <VALUE_TO_STRING>;
			ovtypeToStr 	: C_FUNCTION <OVTYPE_TO_STRING>;
			kstypeToStr 	: C_FUNCTION <KSTYPE_TO_STRING>;
			strToOVType 	: C_FUNCTION <STRING_TO_OVTYPE>;
			strToKSType 	: C_FUNCTION <STRING_TO_KSTYPE>;
			strToValue 	: C_FUNCTION <STRING_TO_VALUE>;
			accessToStr	:	C_FUNCTION <ACCESS_TO_STRING>;
			getfactory	: C_FUNCTION <GET_FACTORY>;
			strlistcat: C_FUNCTION <STR_LIST_CAT>;
		END_OPERATIONS;
	END_CLASS;

	/**
		Add associations and their documentation here.
		Association syntax is:
	*/
	//ASSOCIATION assocName : ONE_TO_MANY
	//	PARENT parentVarName : CLASS ov/object;
	//	CHILD  childVarName : CLASS ov/object;
	//END_ASSOCIATION;
	
END_LIBRARY;
