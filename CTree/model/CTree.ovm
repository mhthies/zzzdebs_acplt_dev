#include "ov.ovm"
#include "fb.ovm"
#include "ksbase.ovm"
//#include "ksapi.ovm"
#include "kshttp.ovm"

LIBRARY CTree
	VERSION   = "V0.1 (15-Mon-2018)";
	AUTHOR    = "Zolboo Erdenebayar";
	COPYRIGHT = "Copyright (C) 2013 Lehrstuhl fuer Prozessleittechnik, RWTH Aachen";
	COMMENT   = "Upload and Download tree in json format";
	

	/**
		Documentation of Upload.
		@note Javadoc syntax is allowed here.
		@attention Changes in this file will only generate new code in ./source/sourcetemplates/. Code in ./source/ is not overwritten. 
	*/
	CLASS Upload : CLASS fb/functionblock
		IS_INSTANTIABLE;
		VARIABLES
			json: STRING FLAGS="i" COMMENT="Tree to upload as json format";
			root: STRING FLAGS="i" COMMENT="where to upload" INITIALVALUE="/TechUnits";
			status: STRING FLAGS="o"	COMMENT="result_status";
			return: INT FLAGS="o"	COMMENT="return";
			errorLog: STRING FLAGS="o"	COMMENT="Logs for error";
			log: STRING FLAGS="o"	COMMENT="Logs";
			//cache: C_TYPE <CtreeUpload> COMMENT="Cache of Object";
		END_VARIABLES;
//		PARTS
//			apiSet				:	CLASS	ksapi/setVar;
//		END_PARTS;
		OPERATIONS
			typemethod  : C_FUNCTION <FB_FNC_TYPEMETHOD>;
		END_OPERATIONS;
	END_CLASS;
	
	/**
		Documentation of Copy.
		@note Javadoc syntax is allowed here.
		@attention Changes in this file will only generate new code in ./source/sourcetemplates/. Code in ./source/ is not overwritten. 
	*/
	CLASS Download : CLASS fb/functionblock
		IS_INSTANTIABLE;
		VARIABLES
			getvar: BOOL FLAGS="i" COMMENT="if variables should be copied";
			root: STRING FLAGS="i" COMMENT="root domain" INITIALVALUE="/TechUnits";
			tree: STRING FLAGS="o" COMMENT="tree";
			libs: STRING FLAGS="o" COMMENT="libs";
			return: INT FLAGS="o"	COMMENT="return";
		END_VARIABLES;
		OPERATIONS
			typemethod  : C_FUNCTION <FB_FNC_TYPEMETHOD>;
		END_OPERATIONS;
	END_CLASS;

	CLASS helper : CLASS fb/functionblock
		IS_INSTANTIABLE;
		VARIABLES
		END_VARIABLES;
		OPERATIONS
			typemethod  : C_FUNCTION <FB_FNC_TYPEMETHOD>;
			valueToStr 	: C_FUNCTION <VALUE_TO_STRING>;
			ovtypeToStr 	: C_FUNCTION <OVTYPE_TO_STRING>;
			kstypeToStr 	: C_FUNCTION <KSTYPE_TO_STRING>;
			strToOVType 	: C_FUNCTION <STRING_TO_OVTYPE>;
			strToKSType 	: C_FUNCTION <STRING_TO_KSTYPE>;
			strToValue 	: C_FUNCTION <STRING_TO_VALUE>;
			getfactory	: C_FUNCTION <GET_FACTORY>;
			strlistcat: C_FUNCTION <STR_LIST_CAT>;
		END_OPERATIONS;
	END_CLASS;	
	/**
		Add associations and their documentation here.
		Association syntax is:
	*/
	//ASSOCIATION assocName : ONE_TO_MANY
	//	PARENT parentVarName : CLASS ov/object;
	//	CHILD  childVarName : CLASS ov/object;
	//END_ASSOCIATION;
	
END_LIBRARY;
