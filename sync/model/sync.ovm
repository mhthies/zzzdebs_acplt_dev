#include "ov.ovm"
#include "fb.ovm"
#include "ovhelper.ovm"
#include "CTree.ovm"
#include "fbcomlib.ovm"
#include "ssc.ovm"
#include "ksapi.ovm"
#include "PostSys.ovm"

LIBRARY sync
	VERSION   = "V0.1 (DD-Mon-YYYY)";
	AUTHOR    = "";
	COPYRIGHT = "";
	COMMENT   = "";
	
	
	CLASS	dsync					:	CLASS	fb/functionblock
		IS_INSTANTIABLE;
		COMMENT	=	"Transport of tree from one server to another with Upload and Download";
		VARIABLES
			/* Input *************************************************/
			destKS:	STRING FLAGS="i" COMMENT="IP:PORT/serverName/path of target object." INITIALVALUE="";
			srcPath:	STRING FLAGS="i" COMMENT="variable path of download object." INITIALVALUE="";
			
			holdConnection	:	BOOL FLAGS="i"
				COMMENT			=	"Tell client not to close the connection after each request"
				INITIALVALUE	=	FALSE;
			reset		:	BOOL	HAS_SET_ACCESSOR
				FLAGS="i"
				COMMENT	=	"Rising edge triggers reset of Client object and sets status and result to 0"
				INITIALVALUE	= FALSE;
			status		:	INT FLAGS="o" 
				COMMENT			= "Status: 0: initial; 1: loadlib request sent, waiting for answer; 2: libs uploaded; 3: upload request sent; 4: completed;"
				INITIALVALUE	=	0;
			result 		: INT FLAGS="o"
				COMMENT		=	"result"
				INITIALVALUE	=	0;
		END_VARIABLES;
		PARTS
			transport	:	CLASS CTree/Transport;
			upload		:	CLASS CTree/Upload;
		END_PARTS;
		OPERATIONS
			//startup				:	C_FUNCTION <OV_FNC_STARTUP>;
			//shutdown			:	C_FUNCTION <OV_FNC_SHUTDOWN>;
			//submit				:	C_FUNCTION <CTREE_FNC_SUBMIT>;
			//getaccess			:	C_FUNCTION <OV_FNC_GETACCESS>;		/*	just to make all variables visible on KS	*/
			//prepareSubmit		:	C_FUNCTION <CTREE_FNC_PREPSUBMIT>;
			//genSetForSubmit		:	C_FUNCTION <CTREE_FNC_GENSETFSUBMIT>;
			typemethod			:	C_FUNCTION <FB_FNC_TYPEMETHOD>;
		END_OPERATIONS;
	END_CLASS;
	
	CLASS syncVar	: CLASS fbcomlib/pkgSetVariable
		IS_INSTANTIABLE;
		COMMENT = "Extention of fbcomlib/pkgSetVariable. Can show if value changed since last set";
		VARIABLES
			sourcePath : STRING FLAGS="i" COMMENT="path from obj";
			lastSentValue :	ANY FLAGS="o"	COMMENT="last sent value";
			diffBases	:	BOOL FLAGS="i"	COMMENT="if to send, only on changes" INITIALVALUE=TRUE;
		END_VARIABLES;
		//PARTS
		//	var	:	CLASS	ksapi/Variable;
		//END_PARTS;
		OPERATIONS
		END_OPERATIONS;
	END_CLASS;
	
	
	CLASS syncVars				: CLASS fbcomlib/setVar
		IS_INSTANTIABLE;
		COMMENT = "variable syncer from path";
		VARIABLES
			targetKS:	STRING FLAGS="i" COMMENT="IP:PORT/serverName/path of root object." INITIALVALUE="";	 
			status		:	INT FLAGS="o"
				COMMENT			= "Status: 0: initial; 1: request sent, waiting for answer; 2: done;" 
				INITIALVALUE	=	0;
			round			: INT FLAGS="o"
				COMMENT = "current round"
				INITIALVALUE = 0;
			result		:	INT FLAGS="o"
				COMMENT			= "Result: 0: Success; 1: Error; 4: Bad Param"
				INITIALVALUE	=	0;
			diffBased :	BOOL FLAGS="i" INITIALVALUE=FALSE;
		END_VARIABLES;
		OPERATIONS
			typemethod	:	C_FUNCTION <FB_FNC_TYPEMETHOD>;
		END_OPERATIONS;
	END_CLASS;
	
	CLASS	sscSync					:	CLASS	fb/functionblock
		IS_INSTANTIABLE;
		COMMENT	=	"sync ssc-s in path with targetKS copies";
		VARIABLES
			/* Input *************************************************/
			targetKS:	STRING FLAGS="i" COMMENT="IP:PORT/serverName/path of root object." INITIALVALUE="";
			path:	STRING FLAGS="i" COMMENT="variable path of root object." INITIALVALUE="";
			tryTimes	: INT FLAGS="i" COMMENT="how many times should try till edit proctime" INITIALVALUE=10;
			
			status		:	INT FLAGS="o" 
				COMMENT			= "Status: 0: initial; 1: request sent, waiting for answer; 2: done;" 
				INITIALVALUE	=	0;
			result		:	INT FLAGS="o"
				COMMENT			= "Result: 0: Success; 1: Error; 4: Bad Param"
				INITIALVALUE	=	0;
		END_VARIABLES;
		PARTS
			//send	:	CLASS sync/sscSend;
			//xdrClient: CLASS ksxdr/xdrClient;
			//ks	:	CLASS	ksapi/setVar;
			syncVars	:	CLASS	sync/syncVars;
		END_PARTS;
		OPERATIONS
			typemethod			:	C_FUNCTION <FB_FNC_TYPEMETHOD>;
			//constructor			: C_FUNCTION <OV_FNC_CONSTRUCTOR>;
		END_OPERATIONS;
	END_CLASS;

	CLASS	Buffer					:	CLASS	ov/domain
		IS_INSTANTIABLE;
		COMMENT	=	"sync ssc-s in path with targetKS copies";
		VARIABLES
			/* Input *************************************************/
		END_VARIABLES;
		OPERATIONS
			
		END_OPERATIONS;
	END_CLASS;
	
	// CLASS	Buffer					:	CLASS	ov/domain
	// 	IS_INSTANTIABLE;
	// 	COMMENT	=	"sync ssc-s in path with targetKS copies";
	// 	VARIABLES
	// 		/* Input *************************************************/
	// 	END_VARIABLES;
	// 	OPERATIONS
			
	// 	END_OPERATIONS;
	// END_CLASS;

	CLASS	sscBuffer					:	CLASS	PostSys/node
		IS_INSTANTIABLE;
		COMMENT	=	"buffers messages send through this node";
		VARIABLES
			/* Input *************************************************/
			SourcePref	: STRING COMMENT="Tree to transmit in source. Used for changing Paths in msgs" INITIALVALUE="";
			DestPref	: STRING COMMENT="Tree to transmit in dest. Used for changing Paths in msgs" INITIALVALUE="";
		END_VARIABLES;
		OPERATIONS
			typemethod			:	C_FUNCTION <KSBASE_FNC_TYPEMETHOD>;
		END_OPERATIONS;
	END_CLASS;
	

	CLASS dummy	: CLASS fb/functionblock
		IS_INSTANTIABLE;
		COMMENT = "Extention of fbcomlib/pkgSetVariable. Can show if value changed since last set";
		VARIABLES
			output	: STRING FLAGS= "o";
			input	:	STRING FLAGS="i";
			divider : INT FLAGS="i" INITIALVALUE=0; 
		END_VARIABLES;
		//PARTS
		//	var	:	CLASS	ksapi/Variable;
		//END_PARTS;
		OPERATIONS
			typemethod			:	C_FUNCTION <FB_FNC_TYPEMETHOD>;
		END_OPERATIONS;
	END_CLASS;
	
	//CLASS db	: CLASS fb/functionblock
	
	
	
	//ASSOCIATION	syncSscVar	: ONE_TO_ONE
	//	PARENT ssc	: CLASS ssc/SequentialStateChart;
	//	CHILD	 syncVar		: CLASS sync/sscVar;
	//END_ASSOCIATION;
	
END_LIBRARY;
