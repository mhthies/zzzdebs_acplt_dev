#include "ov.ovm"
#include "fb.ovm"
#include "ksbase.ovm"
#include "CTree.ovm"

LIBRARY ovunity
	VERSION   = "V0.1 (30-Juni-2018)";
	AUTHOR    = "Zolboo Erdenebayar";
	COPYRIGHT = "PLT RWTH Aachen";
	COMMENT   = "Basis Library um die Testframework Unity mit OV anzuwenden.";
	
	/**
		Documentation of main.
		@note Javadoc syntax is allowed here.
		@bestpractice
		1. Erstelle einen Projekt um eine andere zu testen (mit der Name wie projtotestTest)  
		2. Erstelle f√ºr die zu testenden Klassen, Klassen inheritiert von dieser Klasse
		3. Erstelle Umgebung in json Format.
		4. Erstelle Projekt/test/class Verzeichnisse. Speichere json Datein hier.
		5. Erstelle tests eine json Umgebung verwendet.  
	*/
	CLASS main : CLASS fb/functionblock
		IS_INSTANTIABLE;
		VARIABLES
			sysPath : STRING FLAGS="i" COMMENT="Path in system";
		END_VARIABLES;
		OPERATIONS
			constructor:	C_FUNCTION <OV_FNC_CONSTRUCTOR>;
			typemethod:	C_FUNCTION <FB_FNC_TYPEMETHOD>;
		END_OPERATIONS;
	END_CLASS;
	
	CLASS ovCase : CLASS fb/functionblock
		IS_INSTANTIABLE;
		VARIABLES
			sysPath : STRING FLAGS="i" COMMENT="Path in system";
			//caching
			path		: STRING INITIALVALUE="";
			objPath	: STRING INITIALVALUE="";
			envPath	: STRING INITIALVALUE="";
			objFilePath : STRING INITIALVALUE="";
			envFilePath	:	STRING INITIALVALUE="";
		END_VARIABLES;
		OPERATIONS
			typemethod:	C_FUNCTION <FB_FNC_TYPEMETHOD>;
		END_OPERATIONS;
	END_CLASS;
	
	ASSOCIATION case: ONE_TO_MANY
		PARENT main: CLASS ovunity/main;
		CHILD	 case:	CLASS ovunity/ovCase;
	END_ASSOCIATION;
	
END_LIBRARY;
