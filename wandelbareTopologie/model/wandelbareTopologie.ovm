#include "ov.ovm"
#include "fb.ovm"

LIBRARY wandelbareTopologie
	VERSION   = "V0.1 (DD-Mon-YYYY)";
	AUTHOR    = "";
	COPYRIGHT = "";
	COMMENT   = "";
	
	/**
		Documentation of Node.
		@note Javadoc syntax is allowed here.
		@attention Changes in this file will only generate new code in ./source/sourcetemplates/. Code in ./source/ is not overwritten. 
	*/
	CLASS Node : CLASS fb/functionblock
		IS_INSTANTIABLE;
		VARIABLES
			x : 		SINGLE 	 FLAGS = "i" 		COMMENT = "X Position of the node" 	INITIALVALUE = 0.0;		
			y : 		SINGLE 	 FLAGS = "i" 		COMMENT = "Y Position of the node" 	INITIALVALUE = 0.0;			
			ThetaZ :	SINGLE 	 FLAGS = "i" 		COMMENT = "Z Position of the node" 	INITIALVALUE = 0.0;
			Xlength :	SINGLE 	 FLAGS = "i" 		COMMENT = "Z Position of the node" 	INITIALVALUE = 100.0;			
			Ylength :	SINGLE 	 FLAGS = "i" 		COMMENT = "Z Position of the node" 	INITIALVALUE = 30.0;
			TPSV[]:		BOOL	 FLAGS = "i" 		COMMENT = "Traffic Binary Skills" 	;
			CSV[]:		BOOL	 FLAGS = "i" 		COMMENT = "Carrier Binary Skills" 	;
			CostsC[]:	SINGLE	 FLAGS = "i" 		COMMENT = "Carrier Costs" 	;
			CostsT[]:	SINGLE	 FLAGS = "i" 		COMMENT = "Traffic Costs" 	;
			TTPSVP[]:	SINGLE	 FLAGS = "i" 		COMMENT = "Max Trajectory of traffic Skills" 	;
			TTPSVM[]:	SINGLE	 FLAGS = "i" 		COMMENT = "Min Trajectory of traffic Skills" 	;
			TCSVP[]:	SINGLE	 FLAGS = "i" 		COMMENT = "Max Trajectory of Carrier Skills" 	;
			TCSVM[]:	SINGLE	 FLAGS = "i" 		COMMENT = "Min Trajectory of Carrier Skills" 	;
			PSkills[]:	STRING	 FLAGS = "i" 		COMMENT = "Production Skills of the node" 	;
			// Add variables here. The syntax is:
			// <Variable name> : <Datatype> [<Accessors>] [<FLAGS>] [<Comment>] [<INITIALVALUE>]
			// Example:
			// varName : STRING HAS_GET_ACCESSOR COMMENT="Description of varname.";
			// Example for a fb/functionblock based class
			// inputNAme : UINT HAS_SET_ACCESSOR FLAGS = "i" COMMENT = "Input of type UINT" INITIALVALUE = 5;
		END_VARIABLES;
		OPERATIONS
			// Declare functions here. You may use your own function types, e.g. MY_FUNC,
			// if MY_FUNC is declared in wandelbareTopologie.ovf. Implement the functions in Node.c.
			// fb/functionblock based classes have to implement typemethod
			typemethod  : C_FUNCTION <FB_FNC_TYPEMETHOD>;
		END_OPERATIONS;
	END_CLASS;
	
	/**
		Add associations and their documentation here.
		Association syntax is:
	*/
	//ASSOCIATION assocName : ONE_TO_MANY
	//	PARENT parentVarName : CLASS ov/object;
	//	CHILD  childVarName : CLASS ov/object; 
	//END_ASSOCIATION;
		ASSOCIATION Neighbour : ONE_TO_MANY 
		PARENT parentNeighbour   : CLASS wandelbareTopologie/Node; 
		CHILD  childNeighbour   : CLASS wandelbareTopologie/Node;
		END_ASSOCIATION;
END_LIBRARY;
