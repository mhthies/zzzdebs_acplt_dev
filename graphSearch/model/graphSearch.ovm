#include "ov.ovm"
#include "fb.ovm"
#include "smscrmlogistic.ovm"
#include "SMSTopologie.ovm"

LIBRARY graphSearch
	VERSION   = "V0.1 (DD-Mon-YYYY)";
	AUTHOR    = "";
	COPYRIGHT = "";
	COMMENT   = "";
	
	/**
		Documentation of bfs.
		@note Javadoc syntax is allowed here.
		@attention Changes in this file will only generate new code in ./source/sourcetemplates/. Code in ./source/ is not overwritten. 
	*/
	CLASS bfs : CLASS fb/functionblock
		IS_INSTANTIABLE;
		VARIABLES
			start 		: 	STRING 	FLAGS="i" 	COMMENT="root"	INITIALVALUE="PE004";
			topologie	: 	STRING 	FLAGS="i" 	COMMENT=""	INITIALVALUE="/TechUnits/Topology";
			recipe[]	:		STRING 	FLAGS="i"		COMMENT="";
			EN				: 	UINT		HAS_SET_ACCESSOR FLAGS="i"		COMMENT="0: done & ready 1: run 3: clean";
			
			pathNode[]		:		STRING	FLAGS="o"		COMMENT="path from start through recipe in Nodes";
			pathDir[]		:		STRING	FLAGS="o"		COMMENT="path from start through recipe in Direction";
			result		:		INT			FLAGS="o"		COMMENT="0: succes 1: error";
		END_VARIABLES;
		OPERATIONS
			// Declare functions here. You may use your own function types, e.g. MY_FUNC,
			// if MY_FUNC is declared in graphSearch.ovf. Implement the functions in bfs.c.
			// fb/functionblock based classes have to implement typemethod
			typemethod  : C_FUNCTION <FB_FNC_TYPEMETHOD>;
		END_OPERATIONS;
	END_CLASS;
	
	/**
		Add associations and their documentation here.
		Association syntax is:
	*/
	//ASSOCIATION assocName : ONE_TO_MANY
	//	PARENT parentVarName : CLASS ov/object;
	//	CHILD  childVarName : CLASS ov/object;
	//END_ASSOCIATION;
	
END_LIBRARY;
